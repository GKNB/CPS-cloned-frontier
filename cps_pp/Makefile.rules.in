SRCDIR = @abs_top_srcdir@
BUILDDIR = @abs_builddir@
QOS = @QOS@

PWD := $(shell pwd)
DIR := $(subst $(BUILDDIR),,$(PWD))
DIR := $(subst $(SRCDIR),,$(DIR))/
DIRB:= $(subst /src,/objs/,$(DIR))
DIR:= $(subst /objs/,/src/,$(DIRB))
VPATH:=${SRCDIR}/$(DIR) ${BUILDDIR}/$(DIRB)

CC = @CC@
CXX = @CXX@
AR = @AR@
AS = @AS@

CFLAGS = @CFLAGS@
CXXFLAGS = @CXXFLAGS@
ASFLAGS = @ASFLAGS@

INCLUDE_FLAGS = -I${BUILDDIR} -I${SRCDIR}/include @INCLUDE_FLAGS@

ifeq	($(LIB_NAME_SET),yes)
SEPARATE_LIB = yes
endif

ifeq	($(SEPARATE_LIB),yes)
DIR2 := $(subst /src/,,$(DIR))
DIR2 := $(subst util/,,$(DIR2))
DIR2 := $(subst dirac_op/,,$(DIR2))
DIR2 := $(subst mem/,,$(DIR2))
DIR2 := $(subst alg/,,$(DIR2))
LIBNAME := XXX$(subst /,_,$(DIR2))XXX
LIBNAME := $(subst XXX_,,$(LIBNAME))
LIBNAME := $(subst _XXX,,$(LIBNAME))
LIBNAME := $(subst XXX,,$(LIBNAME))
else
LIBNAME = cps
endif
LIBNAME ?= cps

DFLAGS += @DFLAGS@


DIRLIST := $(shell ls -p $(SRCDIR)/$(DIR) )
DIRLIST := $(filter %/ ,$(DIRLIST))
DIRLIST := $(DIRLIST:/=)

ARCH = @ARCH@
ARCHDIR := $(@ARCHDIR@)

FILTERDIR := $(filter-out $(ARCHDIR) , $(NORECURSE_DIR))
RECURSEDIRS := $(filter-out $(FILTERDIR) , $(DIRLIST))

ifeq "$(ARCH)" "cpsMPI"
  ifeq "$(findstring $(NOARCH_DIR), $(DIRLIST))" "$(NOARCH_DIR)"
    ifneq "$(findstring $(MPI_DIR), $(DIRLIST))" "$(MPI_DIR)"
      RECURSEDIRS += $(NOARCH_DIR)
    endif
  endif
endif 

libcps_CXXFLAGS = $(INCLUDE_FLAGS) $(CXXFLAGS) $(DFLAGS)
.PHONY: $(RECURSEDIRS) cps all recurse clean

all: cps 

recurse: $(RECURSEDIRS)

$(RECURSEDIRS):
	@echo PWD = $(BUILDDIR)/$(DIRB)
	@echo DIR = $(DIR)
	@echo DIRB = $(DIRB)
	mkdir -p $(BUILDDIR)/$(DIRB)/$@
	touch -a $(BUILDDIR)/$(DIRB)/$@/Makefile_depend
	cp -p $(SRCDIR)/$(DIR)/$@/Makefile $(BUILDDIR)/$(DIRB)/$@
ifeq	($(LIB_NAME_SET),yes)
	$(MAKE) -C $@ LIBNAME=$(LIBNAME) $(MAKECMDGOALS)
else
ifeq	($(SEPARATE_LIB),yes)
	$(MAKE) -C $@ SEPARATE_LIB=$(SEPARATE_LIB) $(MAKECMDGOALS)
else
	$(MAKE) -C $@ $(MAKECMDGOALS)
endif
endif


.SUFFIXES:
.SUFFIXES:  .o .C .S

CSRC :=$(wildcard $(SRCDIR)/$(DIR)/*.c)
CCSRC:=$(wildcard $(SRCDIR)/$(DIR)/*.C)
SSRC := $(wildcard $(SRCDIR)/$(DIR)/*.S)

COBJ=$(CSRC:.c=.o)
CCOBJ=$(CCSRC:.C=.o)
SOBJ=$(SSRC:.S=.o)

OBJS_SRC = $(SOBJ) $(CCOBJ) $(COBJ)
OBJS := $(notdir $(OBJS_SRC))

%.o:%.c
	${CC} -c $< -o $(BUILDDIR)/$(DIRB)/$@ ${libcps_CXXFLAGS}
	cd $(BUILDDIR)/$(DIRB) ; ${AR} rcs ${BUILDDIR}/$(LIBNAME).a $@

%.o:%.C
	${CXX} -c $< -o $(BUILDDIR)/$(DIRB)/$@ ${libcps_CXXFLAGS}
	cd $(BUILDDIR)/$(DIRB) ; ${AR} rcs ${BUILDDIR}/$(LIBNAME).a $@

%.o:%.S
	$(CC) -E $(libcps_CXXFLAGS) $< > $(BUILDDIR)/$(DIRB)/$*.i
	$(AS) $(ASFLAGS) -o $(BUILDDIR)/$(DIRB)/$@ $(BUILDDIR)/$(DIRB)/$*.i
	cd $(BUILDDIR)/$(DIRB) ; ${AR} rcs ${BUILDDIR}/$(LIBNAME).a $@

ifeq "${ARCH}" "cpsMPI"

depend: recurse
	cd $(SRCDIR)/$(DIR) ; \
	$(CXX) -M $(INCLUDE_FLAGS) $(DFLAGS) $(notdir $(CSRC)) $(notdir $(CCSRC)) \
	| sed -e 's/:.*\.[cC]/\:/g' > $(PWD)/Makefile_depend

else


depend: recurse
	echo > Makefile_depend
	cd $(SRCDIR)/$(DIR) ;makedepend -f$(PWD)/Makefile_depend $(INCLUDE_FLAGS) $(DFLAGS) $(notdir $(CSRC)) $(notdir $(CCSRC))

endif

clean: recurse
	cd $(BUILDDIR)/$(DIRB) ; rm -f *.o *.i *.bak

cleanlib:
	rm -f $(BUILDDIR)/*.a

cps: recurse $(OBJS) 


$(BUILDDIR)/$(DIRB)/Makefile_depend: depend

ifneq ($(MAKECMDGOALS), clean)
include $(BUILDDIR)/$(DIRB)/Makefile_depend
endif
